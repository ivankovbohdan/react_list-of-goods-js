{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","FIELD_ALPHABET","FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","preparedGoods","goods","sort","good1","good2","localeCompare","length","reverse","getGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,WACjBC,EAAe,SAuBd,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBR,SAAkBC,EAAOL,EAAWE,GAClC,IAAME,EAAa,YAAOC,GAiB1B,OAfAD,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITR,GACFE,EAAcO,UAGTP,EAOeQ,CAASjB,EAAiBK,EAAWE,GAE3D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAAE,WAAYhB,IAAcJ,KAH9D,iCAQA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYhB,IAAcH,KAHjE,4BAQA,wBACEiB,QAAS,kBAAMX,GAAeD,IAC9Ba,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,YAAad,KAHpD,sBAQEF,GAAaE,IACb,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAc,IAEhBY,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGT,EAAca,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvF3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72f3ded5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst FIELD_ALPHABET = 'alphabet';\nconst FIELD_LENGTH = 'length';\n\nfunction getGoods(goods, sortField, isReversed) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case FIELD_ALPHABET:\n        return good1.localeCompare(good2);\n      case FIELD_LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedGoods = getGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(FIELD_ALPHABET)}\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== FIELD_ALPHABET })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== FIELD_LENGTH })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !isReversed })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}